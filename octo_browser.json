{
    "swagger": "2.0",
    "info": {
        "title": "Octo Enterprise API",
        "description": "Integrate with Octo Enterprise using our RESTful APIs.",
        "version": "1.0.0"
    },
    "host": "127.0.0.1:8000",
    "securityDefinitions": {
        "apikey": {
            "type": "apiKey",
            "name": "apikey",
            "in": "header"
        }
    },
    "schemes": [
        "http"
    ],
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/events/app.init/": {
            "post": {
                "summary": "Post an app init event.",
                "description": "Event fired when app is initiated. Everytime app comes to foreground, this event should be fired with all possible values.",
                "tags": [
                    "events"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the UUID for the event.",
                        "schema": {
                            "$ref": "#/definitions/BeaconResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/app.login/": {
            "post": {
                "summary": "Post an app login event.",
                "description": "Event fired when user logins to the app",
                "tags": [
                    "events"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the UUID for the event",
                        "schema": {
                            "$ref": "#/definitions/BeaconResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/app.logout/": {
            "post": {
                "summary": "Post an app logout event.",
                "description": "Event fired when user logs out of the app.",
                "tags": [
                    "events"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the UUID for the event",
                        "schema": {
                            "$ref": "#/definitions/BeaconResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/page.view/": {
            "post": {
                "summary": "Post a page view event.",
                "description": "Event fired when a page view happened. You should fire this event on every page change in the viewport",
                "tags": [
                    "events"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Page View Message",
                        "schema": {
                            "$ref": "#/definitions/PageViewMessage"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the UUID for the event",
                        "schema": {
                            "$ref": "#/definitions/BeaconResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/productpage.view/": {
            "post": {
                "summary": "Post a product page view event.",
                "description": "Event fired when a product page view happened. You should fire this event on every page change in the viewport for products. Products are anything that the consumer consumes. It could cost them money or time. This cost is the value of 'price' parameter.",
                "tags": [
                    "events"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "User ID",
                        "schema": {
                            "$ref": "#/definitions/ProductPageViewMessage"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the UUID for the event",
                        "schema": {
                            "$ref": "#/definitions/BeaconResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BeaconResponse": {
            "description": "Beacon response model",
            "type": "object",
            "properties": {
                "eventId": {
                    "type": "string",
                    "format": "UUID",
                    "description": "The UUID of the event. Use this to trace the event",
                    "example": "57ff6653-c136-4ddf-8dba-15c7bd4995d2"
                }
            }
        },
        "Error": {
            "description": "Error model",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "example": 43
                },
                "message": {
                    "type": "string",
                    "example": "Unable to process message"
                }
            }
        },
        "BrowserDetails": {
            "description": "Model for browser details of the user",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Chrome"
                },
                "platform": {
                    "type": "string",
                    "example": "Linux"
                },
                "manufacturer": {
                    "type": "string",
                    "example": "Google"
                },
                "cookieid": {
                    "type": "string",
                    "example": "abc123"
                }
            }
        },
        "Message": {
            "type": "object",
            "description": "Base message model. Every message must belong to this model",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique User Id of the logged in user. Any unique tracking ID for logged out user.",
                    "example": 2736482
                },
                "browserDetails": {
                    "$ref": "#/definitions/BrowserDetails"
                }
            },
            "required": [
                "userId",
                "browserDetails"
            ]
        },
        "PageViewMessage": {
            "type": "object",
            "description": "Model for page view message",
            "allOf": [
                {
                    "$ref": "#/definitions/Message"
                },
                {
                    "type": "object",
                    "properties": {
                        "routeUrl": {
                            "type": "string",
                            "description": "Human readable unique routing Url for the page",
                            "example": "/Home/DealsOfTheDay/34"
                        },
                        "categories": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Text representation of the categories this page belongs to"
                            },
                            "example": [
                                "shopping",
                                "handbags",
                                "rajasthani"
                            ]
                        },
                        "tags": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Text representation of the tags of the page"
                            },
                            "example": [
                                "handbags",
                                "aldo",
                                "yellow"
                            ]
                        }
                    },
                    "required": [
                        "routeUrl"
                    ]
                }
            ]
        },
        "ProductPageViewMessage": {
            "type": "object",
            "description": "Model for product page view",
            "allOf": [
                {
                    "$ref": "#/definitions/PageViewMessage"
                },
                {
                    "type": "object",
                    "properties": {
                        "productId": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Unique Product ID of the product being viewed",
                            "example": 63726
                        },
                        "productName": {
                            "type": "string",
                            "description": "Human understandable name of the product",
                            "example": "Smartphone Series S01"
                        },
                        "price": {
                            "type": "number",
                            "format": "float",
                            "description": "Price of the product",
                            "example": 99.99
                        }
                    },
                    "required": [
                        "productId",
                        "productName",
                        "price"
                    ]
                }
            ]
        }
    }
}